/*
 * This file is generated by jOOQ.
 */
package com.godov.crudskyweaver.domain.jooq.tables.records;


import com.godov.crudskyweaver.domain.jooq.tables.Matches;
import com.godov.crudskyweaver.enums.Hero;
import com.godov.crudskyweaver.enums.Result;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchesRecord extends UpdatableRecordImpl<MatchesRecord> implements Record6<Long, Hero, Hero, Result, LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.matches.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.matches.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.matches.my_hero</code>.
     */
    public void setMyHero(Hero value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.matches.my_hero</code>.
     */
    public Hero getMyHero() {
        return (Hero) get(1);
    }

    /**
     * Setter for <code>public.matches.opponent_hero</code>.
     */
    public void setOpponentHero(Hero value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.matches.opponent_hero</code>.
     */
    public Hero getOpponentHero() {
        return (Hero) get(2);
    }

    /**
     * Setter for <code>public.matches.result</code>.
     */
    public void setResult(Result value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.matches.result</code>.
     */
    public Result getResult() {
        return (Result) get(3);
    }

    /**
     * Setter for <code>public.matches.played_on</code>.
     */
    public void setPlayedOn(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.matches.played_on</code>.
     */
    public LocalDate getPlayedOn() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.matches.opponent_address</code>.
     */
    public void setOpponentAddress(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.matches.opponent_address</code>.
     */
    public String getOpponentAddress() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Hero, Hero, Result, LocalDate, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Hero, Hero, Result, LocalDate, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Matches.MATCHES.ID;
    }

    @Override
    public Field<Hero> field2() {
        return Matches.MATCHES.MY_HERO;
    }

    @Override
    public Field<Hero> field3() {
        return Matches.MATCHES.OPPONENT_HERO;
    }

    @Override
    public Field<Result> field4() {
        return Matches.MATCHES.RESULT;
    }

    @Override
    public Field<LocalDate> field5() {
        return Matches.MATCHES.PLAYED_ON;
    }

    @Override
    public Field<String> field6() {
        return Matches.MATCHES.OPPONENT_ADDRESS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Hero component2() {
        return getMyHero();
    }

    @Override
    public Hero component3() {
        return getOpponentHero();
    }

    @Override
    public Result component4() {
        return getResult();
    }

    @Override
    public LocalDate component5() {
        return getPlayedOn();
    }

    @Override
    public String component6() {
        return getOpponentAddress();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Hero value2() {
        return getMyHero();
    }

    @Override
    public Hero value3() {
        return getOpponentHero();
    }

    @Override
    public Result value4() {
        return getResult();
    }

    @Override
    public LocalDate value5() {
        return getPlayedOn();
    }

    @Override
    public String value6() {
        return getOpponentAddress();
    }

    @Override
    public MatchesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MatchesRecord value2(Hero value) {
        setMyHero(value);
        return this;
    }

    @Override
    public MatchesRecord value3(Hero value) {
        setOpponentHero(value);
        return this;
    }

    @Override
    public MatchesRecord value4(Result value) {
        setResult(value);
        return this;
    }

    @Override
    public MatchesRecord value5(LocalDate value) {
        setPlayedOn(value);
        return this;
    }

    @Override
    public MatchesRecord value6(String value) {
        setOpponentAddress(value);
        return this;
    }

    @Override
    public MatchesRecord values(Long value1, Hero value2, Hero value3, Result value4, LocalDate value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MatchesRecord
     */
    public MatchesRecord() {
        super(Matches.MATCHES);
    }

    /**
     * Create a detached, initialised MatchesRecord
     */
    public MatchesRecord(Long id, Hero myHero, Hero opponentHero, Result result, LocalDate playedOn, String opponentAddress) {
        super(Matches.MATCHES);

        setId(id);
        setMyHero(myHero);
        setOpponentHero(opponentHero);
        setResult(result);
        setPlayedOn(playedOn);
        setOpponentAddress(opponentAddress);
    }
}
