/*
 * This file is generated by jOOQ.
 */
package com.godov.crudskyweaver.domain.jooq.tables.records;


import com.godov.crudskyweaver.domain.jooq.tables.Players;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayersRecord extends UpdatableRecordImpl<PlayersRecord> implements Record3<String, String, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.players.polygon_address</code>.
     */
    public void setPolygonAddress(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.players.polygon_address</code>.
     */
    public String getPolygonAddress() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.players.nickname</code>.
     */
    public void setNickname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.players.nickname</code>.
     */
    public String getNickname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.players.joined_on</code>.
     */
    public void setJoinedOn(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.players.joined_on</code>.
     */
    public LocalDate getJoinedOn() {
        return (LocalDate) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, LocalDate> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, LocalDate> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Players.PLAYERS.POLYGON_ADDRESS;
    }

    @Override
    public Field<String> field2() {
        return Players.PLAYERS.NICKNAME;
    }

    @Override
    public Field<LocalDate> field3() {
        return Players.PLAYERS.JOINED_ON;
    }

    @Override
    public String component1() {
        return getPolygonAddress();
    }

    @Override
    public String component2() {
        return getNickname();
    }

    @Override
    public LocalDate component3() {
        return getJoinedOn();
    }

    @Override
    public String value1() {
        return getPolygonAddress();
    }

    @Override
    public String value2() {
        return getNickname();
    }

    @Override
    public LocalDate value3() {
        return getJoinedOn();
    }

    @Override
    public PlayersRecord value1(String value) {
        setPolygonAddress(value);
        return this;
    }

    @Override
    public PlayersRecord value2(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public PlayersRecord value3(LocalDate value) {
        setJoinedOn(value);
        return this;
    }

    @Override
    public PlayersRecord values(String value1, String value2, LocalDate value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayersRecord
     */
    public PlayersRecord() {
        super(Players.PLAYERS);
    }

    /**
     * Create a detached, initialised PlayersRecord
     */
    public PlayersRecord(String polygonAddress, String nickname, LocalDate joinedOn) {
        super(Players.PLAYERS);

        setPolygonAddress(polygonAddress);
        setNickname(nickname);
        setJoinedOn(joinedOn);
    }
}
