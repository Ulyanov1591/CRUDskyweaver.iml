/*
 * This file is generated by jOOQ.
 */
package com.godov.crudskyweaver.domain.jooq.tables.records;


import com.godov.crudskyweaver.domain.jooq.tables.Users;
import com.godov.crudskyweaver.dto.user.AdditionalInfo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDate;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record5<UUID, String, LocalDate, String, AdditionalInfo> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.users.nickname</code>.
     */
    public void setNickname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users.nickname</code>.
     */
    public String getNickname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.registration_date</code>.
     */
    public void setRegistrationDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.users.registration_date</code>.
     */
    public LocalDate getRegistrationDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.additional_info</code>.
     */
    public void setAdditionalInfo(AdditionalInfo value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.users.additional_info</code>.
     */
    public AdditionalInfo getAdditionalInfo() {
        return (AdditionalInfo) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, LocalDate, String, AdditionalInfo> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, LocalDate, String, AdditionalInfo> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.NICKNAME;
    }

    @Override
    public Field<LocalDate> field3() {
        return Users.USERS.REGISTRATION_DATE;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<AdditionalInfo> field5() {
        return Users.USERS.ADDITIONAL_INFO;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getNickname();
    }

    @Override
    public LocalDate component3() {
        return getRegistrationDate();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public AdditionalInfo component5() {
        return getAdditionalInfo();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getNickname();
    }

    @Override
    public LocalDate value3() {
        return getRegistrationDate();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public AdditionalInfo value5() {
        return getAdditionalInfo();
    }

    @Override
    public UsersRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public UsersRecord value3(LocalDate value) {
        setRegistrationDate(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value5(AdditionalInfo value) {
        setAdditionalInfo(value);
        return this;
    }

    @Override
    public UsersRecord values(UUID value1, String value2, LocalDate value3, String value4, AdditionalInfo value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UUID id, String nickname, LocalDate registrationDate, String email, AdditionalInfo additionalInfo) {
        super(Users.USERS);

        setId(id);
        setNickname(nickname);
        setRegistrationDate(registrationDate);
        setEmail(email);
        setAdditionalInfo(additionalInfo);
    }
}
